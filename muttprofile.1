.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MUTTPROFILE 1"
.TH MUTTPROFILE 1 "2003-01-15" "perl v5.8.0" "User Contributed Perl Documentation"
.SH "NAME"
muttprofile \- Choose a Mutt Profile
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBmuttprofile\fR [\-a|\-\-active string] [\-d|\-\-dir directory] [\-h|\-\-help] [\-p|\-\-profile regexp] [\-v|\-\-view] [\-V|\-\-Version] [profile]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBmuttprofile\fR is a simple utility to choose a profile to be used with Mutt email\-client.
It has two operating modes: command-line and interactive. Muttprofile goes to interactive
mode if no command-line arguments are present or option \-v|\-\-view is present without profile name.
.PP
Muttprofile looks for profile files in the Mutt directory, opens them and looks for
\&\s-1NAME\s0 and \s-1DESC\s0 definitions. It then creates a symbolic link to the profile chosen by the user. 
The rest of the work is done with a Mutt macro.
.SH "USAGE"
.IX Header "USAGE"
Interactive mode:
.PP
Type the name of the profile and the program creates a symlink to load the profile.
Press <tab> to complete, <ctrl\-d> to see list of choices.
.PP
Command-line options:
.PP
\&\fB\-a | \-\-active\fR Set the name for active profile symlink, default is profile.active
.PP
\&\fB\-d | \-\-dir\fR Set the Mutt directory, default is ~/.mutt
.PP
\&\fB\-h | \-\-help\fR prints a short help and exits
.PP
\&\fB\-p | \-\-profile\fR (Perl) Regexp to match profile files in Mutt directory
.PP
\&\fB\-v | \-\-view\fR Instead of creating a symlink, view profile contents
.PP
\&\fB\-V | \-\-version\fR prints the version information and exits (use \-\-version for long and \-V for short version)
.PP
\&\fBprofile\fR if profile exits, create the symlink to load it from Mutt, otherwise exit with error
.SH "INSTALL"
.IX Header "INSTALL"
\&\fBMuttprofile\fR requires no installation, but you might have to
check the first line of the file (\f(CW\*(C`#!/usr/bin/perl \-w\*(C'\fR)
and change the path to perl if needed (\f(CW'which perl'\fR might be useful here :\-)
.SH "SETTING UP PROFILES"
.IX Header "SETTING UP PROFILES"
\&\fBMuttprofile\fR checks the profile files for the following information:
.PP
# \s-1NAME:\s0 name for your profile
.PP
# \s-1DESC:\s0 description of your profile
.PP
This information is used for choosing and displaying available profiles.
\&\s-1DESC\s0 is optional, but if \s-1NAME\s0 is missing, filename is used instead.
.SH "USING MUTTPROFILE FROM MUTT"
.IX Header "USING MUTTPROFILE FROM MUTT"
Perhaps the easiest way to invoke \fBmuttprofile\fR from \fBmutt\fR is to bind a
key with mutt macro command. For example, adding this to your \fImuttrc\fR\-file
.PP
macro	index	<F10>	\*(L"!muttprofile\en:source ~/.mutt/profile.active\enm\*(R" \*(L"New message with profile\*(R"
.PP
binds the function key <F10> to start muttprofile, load the profile and start a new message
.SH "EXIT CODES"
.IX Header "EXIT CODES"
The default exit codes for muttprofile are:
.PP
.Vb 3
\&    0 OK
\&    1 PROFILE ALREADY ACTIVE
\&    2 ERROR
.Ve
.PP
These codes can be used in shell scripts etc.
.SH "FURTHER INFORMATION"
.IX Header "FURTHER INFORMATION"
Discussion of profiles with Mutt: http://www.iki.fi/martti.rahkila/mutt/
.PP
Mutt home page: http://www.mutt.org
.SH "MODULES"
.IX Header "MODULES"
\&\fBmuttprofile\fR uses the perl modules \f(CW\*(C`Term::Complete\*(C'\fR
and \f(CW\*(C`Getopt::Long\*(C'\fR that both come with the Perl distribution.
.SH "LICENCE"
.IX Header "LICENCE"
\&\fBmuttprofile\fR is distributed under \s-1GNU\s0 General Public Licence (\s-1GPL\s0), same
as Mutt. For details, see http://www.gnu.org/copyleft/gpl.html
.SH "BUGS"
.IX Header "BUGS"
None known so far. Inevitably to appear sooner or later.
.SH "VERSION"
.IX Header "VERSION"
.RE
.IP "1.0.0 (current)"
.IX Item "1.0.0 (current)"
First public release.
.PP
2000\-05\-10 Martti Rahkila
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 3
\&  Martti Rahkila
\&  martti.rahkila@iki.fi
\&  http://www.iki.fi/martti.rahkila/mutt
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fImutt\fR\|(1), \fIperl\fR\|(1)
